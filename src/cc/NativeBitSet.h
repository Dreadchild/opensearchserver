/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jaeksoft_searchlib_util_bitset_NativeBitSet */

#ifndef _Included_com_jaeksoft_searchlib_util_bitset_NativeBitSet
#define _Included_com_jaeksoft_searchlib_util_bitset_NativeBitSet
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    init
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_init
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    size
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_size
  (JNIEnv *, jobject);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    set
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_set__JJ
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    get
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_get
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    clone
 * Signature: ()Lcom/jaeksoft/searchlib/util/bitset/BitSetInterface;
 */
JNIEXPORT jobject JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_clone
  (JNIEnv *, jobject);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    set
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_set___3I
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    set
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_set___3J
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    cardinality
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_cardinality
  (JNIEnv *, jobject);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    flip
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_flip
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    and
 * Signature: (Lcom/jaeksoft/searchlib/util/bitset/NativeBitSet;)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_and
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    or
 * Signature: (Lcom/jaeksoft/searchlib/util/bitset/NativeBitSet;)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_or
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    clear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_clear__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    clear
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_clear__I
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    nextSetBit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_nextSetBit__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jaeksoft_searchlib_util_bitset_NativeBitSet
 * Method:    nextSetBit
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_jaeksoft_searchlib_util_bitset_NativeBitSet_nextSetBit__I
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
